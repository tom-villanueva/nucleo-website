---
import Image from "astro/components/Image.astro";

interface Props {
  title: string;
  image: ImageMetadata;
}

const { title, image } = Astro.props;

const kebabCase = (str: string) => {
  if (str && str !== null) {
    return str
      ?.match(
        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g,
      )
      ?.join("-")
      ?.toLowerCase();
  } else {
    return "";
  }
};

const dialogId = `dialog-${kebabCase(title)}`;
---

<a data-micromodal-trigger={dialogId}>
  <article
    class="flex w-60 cursor-pointer flex-col items-center justify-center md:w-64 lg:w-80 xl:w-96 2xl:w-full"
  >
    <Image
      src={image}
      class="image-shadow h-auto"
      alt="manifiesto nucleo"
      loading={"eager"}
    />
    <p class="text-2xl text-rosa">{title}</p>
  </article>
  <div id={`${dialogId}`} aria-hidden="true" class="modal micromodal-slide">
    <div tabindex="-1" data-micromodal-close class="modal__overlay">
      <div
        role="dialog"
        aria-modal="true"
        aria-labelledby={`${dialogId}-title`}
        class="modal__container"
      >
        <header class="modal__header text-3xl">
          <h2 id={`${dialogId}-title`} class="modal__title">{title}</h2>
          <button
            aria-label="Close modal"
            data-micromodal-close
            class="modal__close"></button>
        </header>
        <div id={`${dialogId}-content`} class="modal__content">
          <Image src={image} alt="manifiesto nucleo" loading={"lazy"} />
        </div>
      </div>
    </div>
  </div>
</a>

<script>
  import MicroModal from "micromodal";
  MicroModal.init({
    awaitCloseAnimation: true,
  });
</script>

<style>
  .image-shadow {
    --shadowColor: #f72586;
    border-radius: 2rem;
    box-shadow: -1rem -1rem 0 var(--shadowColor);
  }

  .modal__overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.6);
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .modal__container {
    /* background-color: #fff; */
    padding: 30px;
    max-width: 80vw;
    max-height: 100vh;
    border-radius: 4px;
    overflow-y: auto;
    box-sizing: border-box;
  }

  .modal__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .modal__title {
    margin-top: 0;
    margin-bottom: 0;
    color: #ffffff;
    box-sizing: border-box;
  }

  .modal__close {
    background: transparent;
    color: #ffffff;
    border: 0;
  }

  .modal__header .modal__close:before {
    content: "\2715";
  }

  .modal__content {
    margin-bottom: 2rem;
    line-height: 1.5;
    color: rgba(0, 0, 0, 0.8);
  }

  .modal__btn {
    font-size: 0.875rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    background-color: #e6e6e6;
    color: rgba(0, 0, 0, 0.8);
    border-radius: 0.25rem;
    border-style: none;
    border-width: 0;
    cursor: pointer;
    -webkit-appearance: button;
    text-transform: none;
    overflow: visible;
    line-height: 1.15;
    margin: 0;
    will-change: transform;
    -moz-osx-font-smoothing: grayscale;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    transition: -webkit-transform 0.25s ease-out;
    transition: transform 0.25s ease-out;
    transition:
      transform 0.25s ease-out,
      -webkit-transform 0.25s ease-out;
  }

  .modal__btn:focus,
  .modal__btn:hover {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
  }

  .modal__btn-primary {
    background-color: #00449e;
    color: #fff;
  }

  /**************************\
  Demo Animation Style
\**************************/
  @keyframes mmfadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes mmfadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes mmslideIn {
    from {
      transform: translateY(15%);
    }
    to {
      transform: translateY(0);
    }
  }

  @keyframes mmslideOut {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(-10%);
    }
  }

  .micromodal-slide {
    display: none;
  }

  .micromodal-slide.is-open {
    display: block;
  }

  .micromodal-slide[aria-hidden="false"] .modal__overlay {
    animation: mmfadeIn 0.3s cubic-bezier(0, 0, 0.2, 1);
  }

  .micromodal-slide[aria-hidden="false"] .modal__container {
    animation: mmslideIn 0.3s cubic-bezier(0, 0, 0.2, 1);
  }

  .micromodal-slide[aria-hidden="true"] .modal__overlay {
    animation: mmfadeOut 0.3s cubic-bezier(0, 0, 0.2, 1);
  }

  .micromodal-slide[aria-hidden="true"] .modal__container {
    animation: mmslideOut 0.3s cubic-bezier(0, 0, 0.2, 1);
  }

  .micromodal-slide .modal__container,
  .micromodal-slide .modal__overlay {
    will-change: transform;
  }
</style>
